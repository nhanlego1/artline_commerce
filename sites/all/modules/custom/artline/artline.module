<?php

/**
 * implement custom moule
 */

/**
 * Implement hook_menu
 */
function artline_menu(){
    $items['admin/config/content/artline'] = array(
        'title' => 'Artline ',
        'description' => 'Control config for artline.',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('artline_admin'),
        'access arguments' => array('administer artline'),
        'file' => 'artline.admin.inc',
    );
    $items['admin/dashboard'] = array(
        'title' => 'Admin Dashboard ',
        'description' => 'Control config for artline.',
        'page callback' => 'artline_admin_dashboard',
        'access arguments' => array('administer artline'),
    );
    $items['direct/checkout'] = array(
        'title' => 'Cart checkout ',
        'description' => 'Control config for artline.',
        'page callback' => 'artline_direct_checkout',
        'access arguments' => array('access content'),
    );
    $items['backend'] = array(
        'title'=> t('Admin System Login'),
        'access arguments' => array('access content'),
        'page callback' => 'artline_backend',
        'type' => MENU_CALLBACK
    );
    return $items;
}

/**
 * Implements hook_permission().
 */
function artline_permission()
{
    return array(
        'administer artline' => array(
            'title' => t('Administer Artline'),
            'restrict access' => TRUE,
        ),
    );
}
/**
 * Implement hook_init
 */
function artline_init()
{
    drupal_add_js(drupal_get_path('module', 'artline') . '/lib/icheck/icheck.js');
    drupal_add_js(drupal_get_path('module', 'artline') . '/js/jquery.nice-select.js');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/nice-select.css');
    drupal_add_css(drupal_get_path('module', 'artline') . '/lib/icheck/skins/all.css');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/admin.css');
}

/**
 * implement hook_form_alter
 */
function artline_form_alter(&$form, &$form_state, $form_id){
  if($form_id=="views_form_commerce_cart_form_default"){
    
    $form['#submit'][] = 'artline_cart_redirect';
   // unset($form['#submit'][0]);
  }
}

function artline_cart_redirect($form, &$form_state){
  $id = commerce_cart_order_id();
  drupal_goto('checkout/'.$id);
}

/**
 * @param $form
 * @param $form_state
 * @return mixed
 */
function artline_form_add_to_cart($form, &$form_state)
{
    $node = $form_state['build_info']['args'][0];
    foreach ($node->field_product[LANGUAGE_NONE] as $id) {
        $product = commerce_product_load($id['product_id']);
        $color = taxonomy_term_load($product->field_color[LANGUAGE_NONE][0]['tid']);
        $form['color_' . $id['product_id']] = array(
            '#type' => 'checkbox',
            '#title' => '<span class="color-label" data="' . $color->field_category_color[LANGUAGE_NONE][0]['value'] . '"></span>',
            '#attributes' => array('data' => $id['product_id'], 'color' => $color->field_category_color[LANGUAGE_NONE][0]['value']),
            '#prefix' => '<div class="grid-2">'
        );
        $form['qty_' . $id['product_id']] = array(
            '#type' => 'textfield',
//            '#title' => 'Số lượng',
            '#attributes' => array('class' => array('qty_cart')),
            '#suffix' => '</div>',
            '#default_value'=>0
        );
    }

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Thêm vào giỏ hàng',
        '#prefix' => '<div class="clearfix"></div>'
    );
    return $form;
}

/**
 * @param $form
 * @param $form_state
 */
function artline_form_add_to_cart_submit($form, &$form_state)
{
    $node = $form_state['build_info']['args'][0];
    foreach ($node->field_product[LANGUAGE_NONE] as $id) {
        if ($form_state['values']['color_' . $id['product_id']] == 1) {
            commerce_cart_product_add_by_id($id['product_id'], $form_state['values']['qty_' . $id['product_id']]);
        }
    }

}

/**
 * get price of node
 */
function _get_price_node($nid)
{
    $node = node_load($nid);
    $product = commerce_product_load($node->field_product[LANGUAGE_NONE][0]['product_id']);
    $price = commerce_currency_format($product->commerce_price[LANGUAGE_NONE][0]['amount'], $product->commerce_price[LANGUAGE_NONE][0]['currency_code']);
    return $price;
}
/**
 * get price of node
 */
function _get_old_price_node($nid)
{
    $node = node_load($nid);
    $product = commerce_product_load($node->field_product[LANGUAGE_NONE][0]['product_id']);
    if(isset($product->field_old_price[LANGUAGE_NONE]) && $product->field_old_price[LANGUAGE_NONE][0]['amount'] > 0){
        $price = commerce_currency_format($product->field_old_price[LANGUAGE_NONE][0]['amount'], $product->commerce_price[LANGUAGE_NONE][0]['currency_code']);
        return $price;
    }else{
        return false;
    }

}

/**
 * Implementation of hook_block_info().
 */
function artline_block_info()
{
    $blocks = array();
    $blocks['artline_fanpage'] = array('info' => t('Artline Fanpage'));
    $blocks['artline_menu'] = array('info' => t('Artline Menu Mobile'));
    $blocks['back_admin'] = array('info' => t('Backtoadmin'));
    $blocks['ad_push'] = array('info' => t('Ads Push'));
    $blocks['cart_block'] = array('info' => t('Cart Block'));
    $blocks['category'] = array('info' => t('Category Block'));
    $blocks['recent_post'] = array('info' => t('Recent Posts'));
    return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function artline_block_view($delta = '')
{
    switch ($delta) {
        case 'artline_fanpage':
            return array(
                'subject' => t('Artline Fanpage'),
                'content' => '<div class="fb-page" data-width="270px" data-href="' . variable_get("facebook_fanpage", "https://www.facebook.com/artline.vn/") . '" data-small-header="true" data-adapt-container-width="false" data-hide-cover="false" data-show-facepile="false"></div>',
            );

            break;
        case 'back_admin':
            return array(
                'content' => '<div class="admin-dashboard-back"><a href="/admin/dashboard">&lt;&lt; Back to dashboard</a></div>',
            );

            break;
          case 'artline_menu':
            return array(
                'content' => '<div class="menu-sub-mobile hide-mobile"><span class="toggler-mobile">☰ Top</span></div>',
            );

            break;
          case 'ad_push':
            return array(
                'content' => ads_push(),
            );

            break;
          case 'cart_block':
            return array(
                'content' => theme('cart_block'),
            );

            break;
          case 'category':
            return array(
                'content' => category_block(),
            );

            break;
          case 'recent_post':
            return array(
                'content' => recent_post(),
            );

            break;

    }
}

/**
 * Implementation of hook_theme().
 */
function artline_theme()
{
    $items = array();

    $items['category_page'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-page',
    );
    $items['category_parent'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-parent',
    );

    $items['category_child'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-child',
    );

    $items['category_detail'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-detail',
    );
    $items['category_relate'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-relate',
    );
    $items['admin_dashboard'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'admin-dashboard',
    );
    $items['ad_push'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'ad-push',
    );
    $items['cart_block'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'cart',
    );
    $items['category'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'category-block',
    );
    $items['recent_post'] = array(
        'render element' => 'element',
        'path' => drupal_get_path('module', 'artline') . '/theme',
        'template' => 'recent-post',
    );

    return $items;
}


/**
 * function get category
 */
function get_category_page($tid)
{
    drupal_add_js(drupal_get_path('module', 'artline') . '/js/owl.carousel.js');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/owl.carousel.css');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/owl.carousel.min.css');
    drupal_add_js(drupal_get_path('module', 'artline') . '/js/artline.js');
    $data = array();
    if(taxonomy_get_children($tid) && !taxonomy_get_parents($tid)){
        $children = taxonomy_get_children($tid);
        if ($children) {
            foreach ($children as $child) {
                    $data[] = _get_category_child($child->tid);
            }
        }
    }
     else {
        $data[] = _get_category_detail($tid);
    }
    return theme('category_page',array('terms'=>$data));
}

/**
 * get category parent
 */
function _get_category_parent($tid)
{
    $term = taxonomy_term_load($tid);
//    $children = taxonomy_get_children($tid);
//    $data = array();
//    if ($children) {
//        foreach ($children as $child) {
            $data[$tid] = _get_nodes_taxonomy($tid);
//        }
//    }

    if ($data) {
        return theme('category_parent', array('terms' => $data));
    } else {
        return false;
    }


}

/**
 * get category parent
 */
function _get_category_child($tid)
{
    $data = array();
    $data['term'] = taxonomy_term_load($tid);
    $data['nodes'] = _get_nodes_taxonomy($tid);
    return theme('category_child', array('data' => $data));
}

/**
 * get category parent
 */
function _get_category_detail($tid)
{
    $data = array();
    $data['term'] = taxonomy_term_load($tid);
    $data['nodes'] = _get_nodes_taxonomy($tid);
    return theme('category_detail', array('data' => $data));
}

/**
 * get category parent
 */
function _get_category_relate($tid, $nid)
{
    drupal_add_js(drupal_get_path('module', 'artline') . '/js/owl.carousel.js');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/owl.carousel.css');
    drupal_add_css(drupal_get_path('module', 'artline') . '/css/owl.carousel.min.css');
    drupal_add_js(drupal_get_path('module', 'artline') . '/js/artline.js');
    $data = array();
    $data = _get_nodes_taxonomy($tid, $nid);
    return theme('category_relate', array('data' => $data));
}

/**
 * get node by taxonomy
 */

function _get_nodes_taxonomy($tid, $nid_current = null)
{
    $nodes = taxonomy_select_nodes($tid, $pager = FALSE, $limit = FALSE);
    $data = array();
    if ($nodes) {
        foreach ($nodes as $nid) {
            if($nid && node_load($nid)){
                if($nid_current != $nid){
                    $data[] = node_load($nid);
                }
            }else{
                if(node_load($nid)){
                    $data[] = node_load($nid);
                }
            }
        }

    }
    if ($data) {
        return $data;
    } else {
        return false;
    }
}

/**
 * trim 200 character
 */
function _trim_character($content, $num = 200)
{
    if ($content) {
        $content = strip_tags($content);
        if(strpos($content, ' ', $num) != null){
            $pos = strpos($content, ' ', $num);
            return substr($content, 0, $pos);
        }else{
            return substr($content, 0, $num);
        }


    } else {
        return '';
    }

}

/**
 * admin dashboard
 */
function artline_admin_dashboard(){
    drupal_add_css(drupal_get_path('module', 'artline') . '/lib/admin_panel/admin-panel.css');
    return theme('admin_dashboard');
}
/**
 * Ads Push
 */
function ads_push(){
  $data = array();
  $query = db_select('node','n');
  $query->fields('n');
  $query->condition('type','ad_push');
  $query->condition('status',1);
  $query->orderBy('changed','DESC');
  $query->range(0,3);
  $result = $query->execute()->fetchAll();
  if($result){
    foreach($result as $n){
      $data[] = node_load($n->nid);
    }
    return theme('ad_push',array('nodes'=>$data));
  }
  return $data;
}

/**
 * category block
 */
function category_block(){
  $arg = arg();
  $data = array();
  $node = menu_get_object('node');
  if($arg[0]=='taxonomy' && $arg[1]=='term' && is_numeric($arg[2])){
    $tid = $arg[2];
    $parents = taxonomy_get_parents($tid);
    if($parents){
      foreach($parents as $parent){
        $childs = taxonomy_get_children($parent->tid);
        foreach($childs as $child){
          $data[] = taxonomy_term_load($child->tid);
        }
      }
    }else{
      $childs = taxonomy_get_children($tid);
        foreach($childs as $child){
          $data[] = taxonomy_term_load($child->tid);
        }
    }
  }elseif($node->type=='tops'){
        $parents = taxonomy_get_parents($node->field_category[LANGUAGE_NONE][0]['tid']);
    if($parents){
      foreach($parents as $parent){
        $childs = taxonomy_get_children($parent->tid);
        foreach($childs as $child){
          $data[] = taxonomy_term_load($child->tid);
        }
      }
    }
  
  }else{
      $voca = taxonomy_vocabulary_machine_name_load('category');
      $terms = taxonomy_get_tree($voca->vid);
      foreach($terms as $term){
        $taxonomy = taxonomy_term_load($term->tid);
        if(taxonomy_get_children($term->tid)){
          $data[] = $taxonomy;
        }
      }
    }
    return theme('category',array('terms'=>$data));
}

function artline_views_query_alter(&$view, &$query) {
  // (Example assuming a view with an exposed filter on node title.)
  // If the input for the title filter is a positive integer, filter against
  // node ID instead of node title.
  $arg = arg();
  if ($view->name == 'product_list' && $view->current_display='page_2') {
    // Traverse through the 'where' part of the query.
    foreach ($query->where as $condition_group) {
      foreach ($condition_group['conditions'] as $condition) {
          $condition = array(
            'field' => 'node.nid',
            'value' => $arg[1],
            'operator' => '!=',
          );
      }
    }
  }
}

/**
 * recent post
 */
function recent_post(){
  $nodes = array();
  $query = db_select('node','n')
      ->fields('n')
      ->condition('type','blog_post')
      ->condition('status',1)
      ->orderBy('created','DESC')
      ->range(0,5);
  $result = $query->execute()->fetchAll();
  if($result){
    foreach($result as $n){
      $nodes[] = node_load($n->nid);
    }
  }
  
  return theme('recent_post',array('nodes'=>$nodes));
}
/**
 * 
 */
function artline_direct_checkout(){
  $id = commerce_cart_order_id();
  drupal_goto('checkout/'.$id);
}
/**
 * 
 */
function artline_backend(){
  global $user;
    $login = '';
    if($user->uid <=0){
        $login .='<h2>'.t('Admin Dashboard').'</h2>';
        $form = drupal_get_form('user_login');
        $login .= render($form);
        return $login; 
    }else{
        drupal_access_denied();
    }
}